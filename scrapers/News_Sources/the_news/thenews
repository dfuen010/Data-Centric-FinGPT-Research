import http.client
import urllib.parse
import json

def fetch_news(sources=None):
    try:
        conn = http.client.HTTPSConnection('api.thenewsapi.com')

        params = {
            'api_token': 'nXUsig3871ipD8WkXDFY8prDewWMUG7xIiSkR2yp',
            'categories': 'business,tech',
            'limit': 50,
        }
        
        if sources:
            params['sources'] = ','.join(sources)

        encoded_params = urllib.parse.urlencode(params)

        conn.request('GET', f'/v1/news/all?{encoded_params}')

        res = conn.getresponse()
        if res.status != 200:
            print(f"Failed to fetch news. HTTP Error {res.status}: {res.reason}")
            return None

        data = res.read()
        return data.decode('utf-8')
    except Exception as e:
        print(f"An error occurred while fetching news: {e}")
        return None

def fetch_news_by_topic(topics=None):
    try:
        conn = http.client.HTTPSConnection('api.thenewsapi.com')

        params = {
            'api_token': 'nXUsig3871ipD8WkXDFY8prDewWMUG7xIiSkR2yp',
            'limit': 50,
        }
        
        if topics:
            params['categories'] = ','.join(topics)

        encoded_params = urllib.parse.urlencode(params)

        conn.request('GET', f'/v1/news/all?{encoded_params}')

        res = conn.getresponse()
        if res.status != 200:
            print(f"Failed to fetch news. HTTP Error {res.status}: {res.reason}")
            return None

        data = res.read()
        return data.decode('utf-8')
    except Exception as e:
        print(f"An error occurred while fetching news: {e}")
        return None

def parse_news(data):
    if data:
        try:
            news_json = json.loads(data)
            articles = news_json.get('data', {}).get('articles', [])
            
            if articles:
                print("Found", len(articles), "articles.")
                for article in articles:
                    print("Title:", article.get('title'))
                    print("Description:", article.get('description'))
                    print("URL:", article.get('url'))
                    print("Published At:", article.get('published_at'))
                    print("Source:", article.get('source', {}).get('name'))
                    print("-" * 50)
            else:
                print("No articles found in the data.")
        except json.JSONDecodeError as e:
            print("Failed to parse JSON data:", e)
    else:
        print("No data provided to parse.")

if __name__ == "__main__":
    print("Fetching news from The News API...")
    news_data = fetch_news()
        # Fetch news from CNN and BBC
    news_data = fetch_news(sources=['cnn', 'bbc-news'])

    # Fetch news from CNN only
    news_data = fetch_news(sources=['cnn'])
    # Fetch news on business and technology
    news_data = fetch_news_by_topic(topics=['business', 'tech'])


    if news_data:
        print("Parsing fetched news...")
        parse_news(news_data)
